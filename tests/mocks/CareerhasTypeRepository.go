// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	domain "woman-center-be/internal/app/v1/models/domain"

	mock "github.com/stretchr/testify/mock"
)

// CareerhasTypeRepository is an autogenerated mock type for the CareerhasTypeRepository type
type CareerhasTypeRepository struct {
	mock.Mock
}

// AddJobType provides a mock function with given fields: career, jobtype
func (_m *CareerhasTypeRepository) AddJobType(career domain.Career, jobtype *domain.Job_Type) error {
	ret := _m.Called(career, jobtype)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.Career, *domain.Job_Type) error); ok {
		r0 = rf(career, jobtype)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoveJobTypeById provides a mock function with given fields: career, jobtype
func (_m *CareerhasTypeRepository) RemoveJobTypeById(career domain.Career, jobtype []domain.Job_Type) error {
	ret := _m.Called(career, jobtype)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.Career, []domain.Job_Type) error); ok {
		r0 = rf(career, jobtype)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCareerhasTypeRepository creates a new instance of CareerhasTypeRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCareerhasTypeRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *CareerhasTypeRepository {
	mock := &CareerhasTypeRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
