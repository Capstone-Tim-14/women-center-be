// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"

	mock "github.com/stretchr/testify/mock"
)

// RecommendedAiHandler is an autogenerated mock type for the RecommendedAiHandler type
type RecommendedAiHandler struct {
	mock.Mock
}

// GenerateRecommendationHandler provides a mock function with given fields: _a0
func (_m *RecommendedAiHandler) GenerateRecommendationHandler(_a0 echo.Context) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllHistoryChatHandler provides a mock function with given fields: _a0
func (_m *RecommendedAiHandler) GetAllHistoryChatHandler(_a0 echo.Context) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRecommendedAiHandler creates a new instance of RecommendedAiHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRecommendedAiHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *RecommendedAiHandler {
	mock := &RecommendedAiHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
